import { CommitID, StreamID } from '@ceramicnetwork/streamid';
import { LoadOpts, Stream, GenesisCommit } from './index.js';
export interface MultiQuery {
    genesis?: GenesisCommit;
    streamId: CommitID | StreamID | string;
    paths?: Array<string>;
    opts?: LoadOpts;
}
export interface StreamReader {
    loadStream<T extends Stream>(streamId: StreamID | CommitID | string, opts?: LoadOpts): Promise<T>;
    multiQuery(queries: Array<MultiQuery>, timeout?: number): Promise<Record<string, Stream>>;
}
//# sourceMappingURL=stream-reader.d.ts.map